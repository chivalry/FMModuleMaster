// timestamp.Format ( _timestamp; _format_string )
// Purpose:		Uses the Unix date command tool flags to take a date and format it by the provided
//				string.
// Parameters:		_timestamp:	The timestamp to format.
//				_format_string:	The string to use for formatting.
// Author:			Charles Ross
// Version:		1.0 - Charles Ross - 06-06-14
//				1.1 - Charles Ross - 08-12-12
//				1.2 - Charles Ross - 14-12-16
//				1.3 - Charles Ross - 15-10-07 Updated `l` format option to have no leading zero
// Notes:			Uses the same formatting option as the `date` command line tool in Unix
//				(`man date`).
//				https://developer.apple.com/library/mac/documentation/Darwin/Reference/
//				ManPages/man1/date.1.html
//
//				The format options are documented in the `strftime` C function man page
//				(`man strftime`).
//				https://developer.apple.com/library/mac/documentation/Darwin/Reference/
//				ManPages/man3/strftime.3.html
// Example:		timestamp.Format ( Timestamp ( Date ( 3; 27; 15 ); Time ( 14; 3; 6 ) ) ;"%D %H:%m %p" )
//				  = "03/27/15 14:03 PM"

Let(
  [
    _timestamp	= GetAsTimestamp( _timestamp );
    _month		= Month( _timestamp );
    _day		= Day( _timestamp );
    _year		= Year( _timestamp );
    _hour		= Hour( _timestamp );
    _low_hour	= Mod( _hour; 12 ) + ( ( Mod ( _hour ; 12 ) = 0 ) * 12 );
    _minute	= Minute( _timestamp );
    _second	= Seconds( _timestamp );

    //  D - Date in mm/dd/yy format (06/14/06)
    _D = Right( "0" & _month; 2 ) & "/" &
      Right( "0" & _day; 2 ) & "/" &
      Right( _year; 2 );
    //  x - Date in standard format for locale, for this solution just the same
    //   as D
    _xx = _D;

    //  C - Century (20 for 2006)
    _C = Left( _year; 2 );
    //  Y - Year in 4-digit format (2006)
    _Y = _year;
    //  y - Year in 2-digit format (06)
    _yy = Right( _year; 2 );
    //  G - Same as Y
    _G = _Y;
    //  g - Same as y
    _g = _yy;

    //  b - Month name - abbreviated (Jan)
    _bb = Left( MonthName( _timestamp ); 3 );
    //  B - Month name - full (January)
    _B = MonthName( _timestamp );
    //  h - Same as b
    _hh = _bb;
    //  m - Month number (06)
    _mm = Right( "0" & _month; 2 );

    //  W - Week of the year (00-52)
    _W = WeekOfYear( _timestamp ) - 1;
    //  V - Week of the year (01-51)
    _V = _W + 1;
    //  U - Same as W
    _U = _W;

    //  A - Day of the week - full name (Monday)
    _A = DayName( _timestamp );
    //  a - Day of the week - abbreviated name (Mon)
    _aa = Left( _A; 3 );
    //  u - Day of the week - number (Sunday = 1, although date tool has Monday
    //   = 1)
    _uu = DayOfWeek( _timestamp );
    //  d - Day of the month - 2 digits (05)
    _dd = Right( "0" & _day; 2 );
    //  e - Day of the month - digit preceded by a space ( 5)
    _ee = " " & _day;
    //  j - Day of the year - (1-366)
    _jj = DayOfYear( _timestamp );
    //  w - Same as u
    _ww = _uu;

    //  p - AM or PM
    _pp = Case( _hour < 12; "AM"; "PM" );
    //  r - Time in 12-hour format (09:15:36 AM)
    _rr = Right( "0" & _low_hour; 2 ) & ":" &
      Right( "0" & _minute; 2 ) & ":" &
      Right( "0" & _second; 2 ) & " " &
      _pp;
    //  R - Time in 24-hour format - no seconds (17:45)
    _R = Right( "0" & _hour; 2 ) & ":"  &
      Right( "0" & _minute; 2 );
    //  T - Time in 24-hour format (17:45:52)
    _T = _R & ":" & Right( "0" & _second; 2 );
    //  X - Same as T
    _X = _T;
    //  Z - Time zone offset from UTC (-07), NOT SUPPORTED

    //  H - Hour in 24-hour format (17)
    _H = Right( "0" & _hour; 2 );
    //  I - (upper case i) Hour in 12-hour format (05)
    _I = Right( "0" & _low_hour; 2 );
    //  k - Same as H
    _k = _H;
    //  l - (lower case L) Hour in 12-hour format (5)
    _ll = _low_hour;

    //  M - Minutes (35)
    _M = Right( "0" & _minute; 2 );
    //  S - Seconds (05)
    _S = Right( "0" & _second; 2 );
    //  s - Seconds elapsed since 1/1/1970
    _ss = GetAsNumber(
      _timestamp - Timestamp( Date( 1; 1; 1970 ); Time( 0; 0; 0 ) )
    )
  ];

  Substitute( _format_string;
    [ "%%";		"%"	];
    [ "%D";		_D	];
    [ "%x";		_xx	];
    [ "%C";		_C	];
    [ "%Y";		_Y	];
    [ "%y";		_yy	];
    [ "%G";		_G	];
// [ "%g";		_gg	]; Unsupported Unix flag
    [ "%b";		_bb	];
    [ "%B";		_B	];
    [ "%h";		_hh	];
    [ "%m";		_mm	];
    [ "%W";		_W	];
    [ "%V";		_V	];
    [ "%U";		_U	];
    [ "%a";		_aa	];
    [ "%A";		_A	];
    [ "%u";		_uu	];
    [ "%d";		_dd	];
    [ "%e";		_ee	];
    [ "%j";		_jj	];
    [ "%w";		_ww	];
    [ "%p";		_pp	];
    [ "%r";		_rr	];
    [ "%R";		_R	];
    [ "%T";		_T	];
    [ "%X";		_X	];
    [ "%H";		_H	];
    [ "%I";		_I	];
// [ "%k";		_kk	]; Unsupported Unix flag
    [ "%l"; 		_ll	];
    [ "%M";		_M	];
    [ "%S";		_S	];
    [ "%s";		_ss	]
  )
)
