// list.Intersection ( _list_1; _list_2 )
// Purpose:		Returns the intersection of the two lists, that is, returns the members of the list that
//				exist in both.
// Parameters:		_list_1: A list
//              		_list_2: Another list
// Requirements: 	lsts.First
//				lsts.Rest
// Version:		1.0 written 15-03-11 by Charles Ross
// Example:
// list.Intersection ( "1¶2¶3"; "2¶3¶4¶5" ) = "2¶3"

Case (
  ValueCount ( _list_1 ) = 0; // The exit condition
  dev.Nil;

  Let (
    [
      _first	= list.First ( _list_1 );
      _rest	= list.Rest ( _list_1 );

      _rest_intersection = list.Intersection ( _rest; _list_2 );

      _result = Case (
        list.IsMember ( _first; _list_2 );		List ( _first; _rest_intersection );
								_rest_intersection
      )
    ];

    _result
  )
)
